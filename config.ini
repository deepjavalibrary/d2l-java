[project]

# The project name, used as the filename of the package and the PDF file. For
# example, if set to d2l-book, then will build d2l-book.zip and d2l-book.pdf
name = d2l-java

# Book title. It will be displayed on the top-right of the HTML page and the
# front page of the PDF file
title = Dive into Deep Learning

author = Aston Zhang, Zachary C. Lipton, Mu Li, and Alexander J. Smola

copyright = 2019, All authors. Licensed under CC-BY-SA-4.0 and MIT-0.

release = 0.1.0


[build]

# A list of wildcards to indicate the markdown files that need to be evaluated as
# Jupyter notebooks.
notebooks = *.md  */*.md

# A list of files that will be copied to the build folder.
resources = img/ d2l/ d2l.bib setup.py

# Files that will be skipped.
exclusions = README.md STYLE_GUIDE.md INFO.md CODE_OF_CONDUCT.md CONTRIBUTING.md contrib/*md

# If True (default), then will evaluate the notebook to obtain outputs.
eval_notebook = True

# If True, the mark the build as failed for any warning. Default is False.
warning_is_error = False


# A list of files, if anyone is modified after the last build, will re-build all
# documents.
dependencies =

sphinx_extensions = sphinx.ext.intersphinx

[html]

# A list of links that is displayed on the navbar. A link consists of three
# items: name, URL, and a fontawesome icon
# (https://fontawesome.com/icons?d=gallery). Items are separated by commas.
# PDF, http://numpy.d2l.ai/d2l-en.pdf, fas fa-file-pdf,
header_links = Courses, https://courses.d2l.ai, fas fa-user-graduate,
               D2L Java  Notebooks, https://github.com/deepjavalibrary/d2l-java, fas fa-download,
               Slack, https://join.slack.com/t/deepjavalibrary/shared_invite/zt-ar91gjkz-qbXhr1l~LFGEIEeGBibT7w, fab fa-slack,
               DJL GitHub, https://github.com/awslabs/djl, fab fa-github,
               中文版, https://zh.d2l.ai, fas fa-external-link-alt

favicon = static/favicon.png

html_logo = static/logo-with-text.png

# A list of JS files to be included
include_js = require.min.js

[pdf]

# The file used to post-process the generated tex file.
post_latex = ./static/post_latex/main.py

latex_logo = static/logo.png
main_font = Source Serif Pro
sans_font = Source Sans Pro
mono_font = Inconsolata
